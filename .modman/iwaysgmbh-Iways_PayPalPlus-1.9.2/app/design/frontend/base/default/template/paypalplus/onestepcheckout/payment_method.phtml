<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category   design_default
 * @package    Mage
 * @copyright  Copyright (c) 2008 Irubin Consulting Inc. DBA Varien (http://www.varien.com)
 * @license    http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
/**
 * One page checkout payment methods
 *
 * @see Mage_Checkout_Block_Onepage_Payment_Methods
 */
?>


<?php

$helper = Mage::helper('onestepcheckout/checkout');
$paymentExperience  = Mage::helper('iways_paypalplus')->getPaymentExperience();
$hide_nonfree_methods = false;
if($helper->settings['hide_nonfree_payment_methods'])   {
    foreach($this->getMethods() as $_method)    {
        if($_method->getCode() == 'free')   {
            $hide_nonfree_methods = true;
        }
    }
}
$_methods = $this->getMethods();
$thirdPartyMethods = Mage::getStoreConfig('payment/iways_paypalplus_payment/third_party_moduls');
$thirdPartyPayPalMethods = array();
if (!empty($thirdPartyMethods)) {
    $thirdPartyMethods = explode(',', $thirdPartyMethods);
}else {
    $thirdPartyMethods = array();
}
$thirdPartyMethods = array_merge($thirdPartyMethods, array('paypaluk_direct', 'paypaluk_express', 'paypal_standard', 'paypal_direct', 'paypal_express_bml', 'paypal_express'));
foreach($thirdPartyMethods as $thirdPartyMethod) {
    $thirdPartyPayPalMethods[$thirdPartyMethod] = true;
}
$pppActive = false;
if($paymentExperience) {
    foreach ($_methods as $_method){
        if($_method->getCode() == 'iways_paypalplus_payment') $pppActive = true;
    }
}
$hideStyle = ' style="display:none;"';

?>

<div class="payment-methods">
    <script type="text/javascript">
        //<![CDATA[
        <?php echo $this->getChildHtml('reward.scripts'); ?>
        <?php echo $this->getChildHtml('customerbalance_scripts'); ?>
        var payment = new Payment('checkout-payment-method-load', '<?php echo $this->getUrl('checkout/onepage/savePayment') ?>');
        payment.currentMethod = "<?php echo $this->getQuote()->getPayment()->getMethod() ?>";
        //]]>
    </script>
    <?php if(Mage::helper('onestepcheckout')->isEnterprise()):?>
        <?php echo $this->getChildHtml('customerbalance'); ?>
        <?php echo $this->getChildHtml('reward.points'); ?>
    <?php endif;?>

    <?php if (count($_methods)=='1' && Mage::getStoreConfig('onestepcheckout/general/hide_payment_method')):?>
        <dl id="checkout-payment-method-load" style="display: none" class="sp-methods">
            <?php foreach ($this->getMethods() as $_method): $_code = $_method->getCode() ?>

                <dt class="ppp <?php echo $_code; ?>">
                    <input id="p_method_<?php echo $_code ?>" value="<?php echo $_code ?>" type="radio" name="payment[method]" title="<?php echo $this->escapeHtml($_method->getTitle()) ?>" class="radio" <?php if($this->getSelectedMethodCode()==$_code || ($hide_nonfree_methods && $_code == 'free')): ?> checked="checked"<?php endif; ?> />
                    <label for="p_method_<?php echo $_code ?>"><?php echo $_method->getTitle() ?></label></dt>
            <?php endforeach; ?>
        </dl>
    <?php else:?>

        <dl id="checkout-payment-method-load" class="sp-methods">
            <?php foreach ($_methods as $_method):
                $_code = $_method->getCode();
                if(isset($thirdPartyPayPalMethods[$_code]) && $pppActive) {
                    $hide = true;
                }else {
                    $hide = false;
                }
                ?>
                <?php if($hide_nonfree_methods && $_code != 'free') continue; ?>
                <dt class="ppp <?php echo $_code?>"<?php if($hide || $_code == 'iways_paypalplus_payment') echo $hideStyle; ?>>
                    <input id="p_method_<?php echo $_code ?>" value="<?php echo $_code ?>" type="radio" name="payment[method]" title="<?php echo $this->escapeHtml($_method->getTitle()) ?>" class="radio validate-one-required-by-name" <?php if($this->getSelectedMethodCode()==$_code || ($hide_nonfree_methods && $_code == 'free')): ?> checked="checked"<?php endif; ?> />
                    <label for="p_method_<?php echo $_code ?>"><?php echo $_method->getTitle() ?></label>
                </dt>
                <dd id="container_payment_method_<?php echo $_code; ?>" class="payment-method ppp <?php echo $_code?>"<?php if($hide) echo $hideStyle; ?>>
                    <?php if($html = $this->getChildHtml('payment.method.'.$_code)): ?>
                        <?php echo $html; ?>
                    <?php endif; ?>
                </dd>

            <?php endforeach; ?>
        </dl>
    <?php endif;?>
</div>
<script type="text/javascript">
    //<![CDATA[
    if(typeof payment.parentSwitchMethod == 'undefined') {
        payment.parentSwitchMethod = payment.switchMethod;
        payment.switchMethod = function(method) {
            try {
                payment.currentMethod = method;
                if(typeof window.ppp != 'undefined' && method != 'iways_paypalplus_payment' && typeof payment.thirdPartyMethodObject[method] == 'undefined') {
                    window.externMethodEnabled = true;
                    window.ppp.deselectPaymentMethod();
                    try {
                        $('onestepcheckout-place-order').enable();
                    }catch (e) {
                        $$('#payment-buttons-container > button')[0].enable();
                    }
                }
            }catch(e) {
            }
            try{
                $$('.ppp').each(function(element){element.removeClassName('ppp-selected')});
                $$('.ppp.'+method).each(function(element){element.addClassName('ppp-selected')});
            }catch(e) {
            }
            return this.parentSwitchMethod(method);
        }
    }
    $$('.cvv-what-is-this').each(function(element){
        Event.observe(element, 'click', toggleToolTip);
    });

    function toggleToolTip(event){
        if($('payment-tool-tip')){
            $('payment-tool-tip').setStyle({
                left: (Event.pointerX(event)-100)+'px',
                top: (Event.pointerY(event)-300)+'px'
            });
            $('payment-tool-tip').toggle();
        }
        Event.stop(event);
    }

    var checkout = new Checkout();
    $$('#checkout-payment-method-load dt.ppp').each(function(element) {
        var element = element;
        element.observe('click', function(e) {
            $$('.ppp').each(function(element){element.removeClassName('ppp-selected')});
            element.addClassName('ppp-selected');
            element.next().addClassName('ppp-selected');
            var method = element.down().id.replace('p_method_', '');
            payment.currentMethod = method;
            try {
                if(window.ppp != null && method != 'iways_paypalplus_payment' && typeof window.thirdPartyMethodObject[method] == 'undefined') {
                    window.externMethodEnabled = true;
                    window.ppp.deselectPaymentMethod();
                    try {
                        $$('#payment-buttons-container > button')[0].enable();
                    }catch (e) {
                        $('onestepcheckout-place-order').enable();
                    }
                }
            }catch(e) {
            }

            try {
                try {
                    $(window.last_method_shown).hide();
                }catch(e) {

                }
                window.last_method_shown = 'payment_form_'+method;
                $('payment_form_'+method).show();
            }catch(e) {

            }
        });
    });

    <?php if(Mage::helper('onestepcheckout')->isEnterprise() && Mage::helper('customer')->isLoggedIn()):?>
    //if we have a enterprise version we should include this

    rPoints = $('use_reward_points');
    if(rPoints){
        if(rPoints.checked){
            payment.switchRewardPointsCheckbox();
        }
    }
    cBalance = $('use_customer_balance');
    if(cBalance){
        if(cBalance.checked){
            payment.switchCustomerBalanceCheckbox();
        }
    }
    //if we have a enterprise version we should include this end
    <?php endif;?>

    payment.switchMethod(payment.currentMethod);
    <?php echo $this->getChildHtml('giftcardaccount_scripts');?>
    //]]>
</script>
